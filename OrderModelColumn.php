<?php
/**
 * @copyright Copyright (c) 2016. Wubbleyou Ltd
 */

namespace wubbleyou\ordermodel;

use yii\db\ActiveRecord;
use yii\grid\DataColumn;
use yii\helpers\Html;
use yii\grid\GridViewAsset;
use Yii;

/**
 * Column to attach to a grid view which displays ability to order models
 *
 * Attach via:
 *
 * [
 *      'class' => OrderModelColumn::className(),
 *      'attribute' => 'order'
 *      'url' => ['action_name', 'optionalparams'...]
 * ],
 *
 * Class OrderBehavior
 * @package wubbleyou\ordermodel
 */
class OrderModelColumn extends DataColumn
{


    /**
     * @var $url array url to use to override in house url
     */
    public $url = [];

    /**
     * @inheritdoc
     */
    public function init()
    {

        $script = <<< JS
jQuery(document).on('click', '.order-link', function(e) {

    e.preventDefault();
    var csrfToken = $('meta[name="csrf-token"]').attr("content");
    var url = jQuery(this).attr('href');
    var obj = this;
    jQuery.ajax({
       method: 'post',
       url: url,
       data: {_csrf: csrfToken},
       success: function(data) {

           jQuery('#'+jQuery( obj ).closest( ".grid-view" ).attr('id')).yiiGridView("applyFilter");
       }
    });
});
JS;

        $view = $this->grid->getView();
        GridViewAsset::register($view);
        $view->registerJs($script);

        parent::init(); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritdoc
     */
    protected function renderDataCellContent($model, $key, $index)
    {
        if ($this->content === null) {
            return
                Html::a('<span class="glyphicon glyphicon-arrow-up"></span>', $this->getUrl('up', $model), ['class' => 'order-link'])
                .Html::a('<span class="glyphicon glyphicon-arrow-down"></span>', $this->getUrl('down', $model), ['class' => 'order-link']);
        } else {
            return parent::renderDataCellContent($model, $key, $index);
        }
    }

    /**
     * @param $direction string
     * @param $model ActiveRecord
     * @return array
     */
    protected function getUrl($direction, ActiveRecord $model){

        $url = !empty($this->url) ? $this->url : ['order'];
        $url['direction'] = $direction;
        $url['attribute'] = $this->attribute;
        $url['id'] = $model->getPrimaryKey();

        return $url;
    }
}